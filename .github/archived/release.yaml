# This is the DEV workflow.
# Run this Action on creating a new tag matching "<version>-b<build>"
# e.g., 3.7-b1
name: Build support package
on:
  push:
    tags:
    - '*-b*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set build variables
      env:
        TAG_NAME: ${{ github.ref }}
      run: |
        export TAG=$(basename $TAG_NAME)
        echo "TAG=${TAG}"
        export TAG_VERSION="${TAG%-*}"
        export TAG_BUILD="${TAG#*-}"
        echo "PY_VERSION=${TAG_VERSION}"
        echo "BUILD_NUMBER=${TAG_BUILD}"
        echo "TAG=${TAG}" >> $GITHUB_ENV
        echo "PY_VERSION=${TAG_VERSION}" >> $GITHUB_ENV
        echo "BUILD_NUMBER=${TAG_BUILD}" >> $GITHUB_ENV
    - name: Build project
      run: bash -x main.sh -v ${{ env.PY_VERSION }} -n ${{ env.BUILD_NUMBER }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: false
        body: |
          Build ${{ env.BUILD_NUMBER }} of the BeeWare Android support package for Python ${{ env.PY_VERSION }}.

          Contains:

          Python ${{ env.BUILD_NUMBER }}.?
          OpenSSL 1.1.1o
          xz 5.2.5
          bzip2 1.0.8
          sqlite3 3.35.0
          rubicon 0.2.6
    - name: Upload Release Asset to Github
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/Python-${{ env.PY_VERSION }}-Android-support.${{ env.BUILD_NUMBER }}.zip
        asset_name: Python-${{ env.PY_VERSION }}-Android-support.${{ env.BUILD_NUMBER }}.zip
        asset_content_type: application/zip
